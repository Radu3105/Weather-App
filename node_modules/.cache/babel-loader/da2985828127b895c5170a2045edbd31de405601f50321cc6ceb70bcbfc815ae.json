{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\WeatherCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherCard = ({\n  latitude,\n  longitude\n}) => {\n  _s();\n  var _searchQueryResponse$;\n  const MAX_CITY_RESPONSE_NUMBER = 10;\n  const [weatherData, setWeatherData] = useState(undefined); // TODO: Change 'any' to 'WeatherData'\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchQueryResponse, setSearchQueryResponse] = useState([]); // TODO: Change 'any' to 'SearchQueryResponse'\n  const [selectedCity, setSelectedCity] = useState(undefined);\n  const [searchDropdownOpen, setSearchDropdownOpen] = useState(false);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`);\n        // console.log(response.data);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data. \" + error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  useEffect(() => {\n    const fetchSearchQueryResponse = async () => {\n      try {\n        const response = await axios.get(`https://geocoding-api.open-meteo.com/v1/search?name=${searchQuery}&count=10&language=en&format=json`);\n        console.log(response.data);\n        setSearchQueryResponse(response.data);\n      } catch (error) {\n        console.error(\"Error fetching geolocation data. \" + error);\n      }\n    };\n    fetchSearchQueryResponse();\n  }, [searchQuery]);\n  const handleOnSearchQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleOnSearchQueryClick = () => {\n    setSearchDropdownOpen(true);\n  };\n  const handleOnSearchQueryResponseClick = city => {\n    setSelectedCity(city);\n  };\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (searchQueryResponse.results) {\n      setSelectedCity(searchQueryResponse.results[0]);\n      // setSearchQuery(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card-search\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"weather-card-search-form\",\n          onSubmit: handleOnSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"weather-card-search-box\",\n            type: \"text\",\n            value: searchQuery,\n            onChange: handleOnSearchQueryChange,\n            onClick: handleOnSearchQueryClick,\n            placeholder: \"Search by city name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card-search-dropdown\",\n            children: !selectedCity && (searchQueryResponse === null || searchQueryResponse === void 0 ? void 0 : (_searchQueryResponse$ = searchQueryResponse.results) === null || _searchQueryResponse$ === void 0 ? void 0 : _searchQueryResponse$.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-card-search-dropdown-item\",\n              onClick: () => handleOnSearchQueryResponseClick(result),\n              children: [result.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                children: [\", \", result.country_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-current-main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), selectedCity && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedCity.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WeatherCard, \"Wh4QVi0BOkIoJYP2PapKQYu8Lc8=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherCard","latitude","longitude","_s","_searchQueryResponse$","MAX_CITY_RESPONSE_NUMBER","weatherData","setWeatherData","undefined","searchQuery","setSearchQuery","searchQueryResponse","setSearchQueryResponse","selectedCity","setSelectedCity","searchDropdownOpen","setSearchDropdownOpen","fetchWeatherData","response","get","data","error","console","fetchSearchQueryResponse","log","handleOnSearchQueryChange","event","target","value","handleOnSearchQueryClick","handleOnSearchQueryResponseClick","city","handleOnSubmit","preventDefault","results","children","className","onSubmit","type","onChange","onClick","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","name","style","fontSize","country_code","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/WeatherCard.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface Props {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\ninterface WeatherData {\r\n    // TODO\r\n}\r\n\r\ninterface searchQueryResponse {\r\n    // TODO\r\n}\r\n\r\nconst WeatherCard: React.FC<Props> = ({ latitude, longitude }) => {\r\n    const MAX_CITY_RESPONSE_NUMBER = 10;\r\n\r\n    const [weatherData, setWeatherData] = useState<any | undefined>(undefined); // TODO: Change 'any' to 'WeatherData'\r\n    const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n    const [searchQueryResponse, setSearchQueryResponse] = useState<any | undefined>([]); // TODO: Change 'any' to 'SearchQueryResponse'\r\n    const [selectedCity, setSelectedCity] = useState<any>(undefined);\r\n    const [searchDropdownOpen, setSearchDropdownOpen] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`\r\n                );\r\n                // console.log(response.data);\r\n                setWeatherData(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data. \" + error);\r\n            }\r\n        };\r\n        fetchWeatherData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchSearchQueryResponse = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://geocoding-api.open-meteo.com/v1/search?name=${searchQuery}&count=10&language=en&format=json`\r\n                );\r\n                console.log(response.data);\r\n                setSearchQueryResponse(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching geolocation data. \" + error);\r\n            }\r\n        };\r\n        fetchSearchQueryResponse();\r\n    }, [searchQuery]);\r\n\r\n    const handleOnSearchQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    const handleOnSearchQueryClick = () => {\r\n        setSearchDropdownOpen(true);\r\n    };\r\n\r\n    const handleOnSearchQueryResponseClick = (city: any) => {\r\n        setSelectedCity(city);\r\n    };\r\n\r\n    const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (searchQueryResponse.results) {\r\n            setSelectedCity(searchQueryResponse.results[0]);\r\n            // setSearchQuery(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"weather-card\">\r\n                <div className=\"weather-card-search\">\r\n                    <form\r\n                        className=\"weather-card-search-form\"\r\n                        onSubmit={handleOnSubmit}\r\n                    >\r\n                        <input\r\n                            className=\"weather-card-search-box\"\r\n                            type=\"text\"\r\n                            value={searchQuery}\r\n                            onChange={handleOnSearchQueryChange}\r\n                            onClick={handleOnSearchQueryClick}\r\n                            placeholder={\"Search by city name\"}\r\n                        ></input>\r\n                        <div className=\"weather-card-search-dropdown\">\r\n                            {!selectedCity &&\r\n                                searchQueryResponse?.results?.map(\r\n                                    (result: any, index: number) => (\r\n                                        <div\r\n                                            className=\"weather-card-search-dropdown-item\"\r\n                                            key={index}\r\n                                            onClick={() =>\r\n                                                handleOnSearchQueryResponseClick(\r\n                                                    result\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {result.name}\r\n                                            <span style={{ fontSize: \"12px\" }}>\r\n                                                , {result.country_code}\r\n                                            </span>\r\n                                        </div>\r\n                                    )\r\n                                )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {weatherData && (\r\n                    <>\r\n                        <div className=\"weather-card-current-main\">\r\n                            {/* <p>{weatherData.current_weather.temperature}℃</p> */}\r\n                        </div>\r\n                        <div className=\"weather-card-hourly\"></div>\r\n                        <div className=\"weather-card-daily\"></div>\r\n                    </>\r\n                )}\r\n                {selectedCity && (\r\n                    <>\r\n                        <p>{selectedCity.name}</p>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}