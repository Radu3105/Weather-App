{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\WeatherCard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport weatherCodes from \"../weatherCodes\";\nimport HourlyWeatherCardList from \"./HourlyWeatherCardList\";\nimport DailyWeather from \"./DailyWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStateLocalStorage = (key, defaultValue) => {\n  _s();\n  const [value, setValue] = useState(() => {\n    try {\n      const savedValue = window.localStorage.getItem(key);\n      return savedValue ? JSON.parse(savedValue) : defaultValue;\n    } catch {\n      return defaultValue;\n    }\n  });\n  useEffect(() => {\n    const rawValue = JSON.stringify(value);\n    window.localStorage.setItem(key, rawValue);\n  }, [value]);\n  return [value, setValue];\n};\n_s(useStateLocalStorage, \"0dBj0bXf48g/KwJbM3hbE1rjndw=\");\nconst WeatherCard = () => {\n  _s2();\n  var _searchQueryResponse$;\n  const [weatherData, setWeatherData] = useState(undefined); // TODO: Change 'any' to 'WeatherData'\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchQueryResponse, setSearchQueryResponse] = useState([]); // TODO: Change 'any' to 'SearchQueryResponse'\n  const [selectedCity, setSelectedCity] = useState(undefined);\n  const [searchDropdownOpen, setSearchDropdownOpen] = useState(false);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (selectedCity) {\n        try {\n          const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${selectedCity.latitude}&longitude=${selectedCity.longitude}&hourly=weathercode,temperature_2m,uv_index,cloudcover&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`);\n          console.log(response.data);\n          setWeatherData(response.data);\n          window.localStorage.setItem('weatherData', JSON.stringify(response.data));\n        } catch (error) {\n          console.error(\"Error fetching weather data. \" + error);\n        }\n      }\n    };\n    fetchWeatherData();\n  }, [selectedCity]);\n  useEffect(() => {\n    const fetchSearchQueryResponse = async () => {\n      try {\n        const response = await axios.get(`https://geocoding-api.open-meteo.com/v1/search?name=${searchQuery}&count=10&language=en&format=json`);\n        console.log(response.data);\n        setSearchQueryResponse(response.data);\n      } catch (error) {\n        console.error(\"Error fetching geolocation data. \" + error);\n      }\n    };\n    fetchSearchQueryResponse();\n  }, [searchQuery]);\n  const handleOnSearchQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleOnSearchQueryClick = () => {\n    setSearchDropdownOpen(true);\n    // TODO: Blur everything except the dropdown menu\n  };\n\n  // TODO\n  const handleOnSearchQueryFocusOut = () => {\n    // setSearchDropdownOpen(false);\n  };\n  const handleOnSearchQueryResponseClick = city => {\n    setSelectedCity(city);\n    setSearchDropdownOpen(false);\n    setSearchQuery(\"\");\n  };\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (searchQueryResponse.results) {\n      setSelectedCity(searchQueryResponse.results[0]);\n    }\n  };\n  const getHourlyWeather = () => {\n    const data = new Array();\n    const nowHour = new Date().getHours();\n    for (let i = nowHour; i <= nowHour + 23; i++) {\n      data.push({\n        hour: weatherData.hourly.time[i].slice(11, 13),\n        weatherCode: weatherData.hourly.weathercode[i],\n        temperature: Math.round(weatherData.hourly.temperature_2m[i])\n      });\n    }\n    console.log(data);\n    return data;\n  };\n  const getDailyWeather = () => {\n    const dailyWeatherData = new Array();\n    for (let i = 0; i < 16; i++) {\n      let date = new Date(weatherData.daily.time[i]);\n      dailyWeatherData.push({\n        // day: 'TBD',\n        day: date.toLocaleDateString(\"en-US\", {\n          weekday: 'long'\n        }),\n        weatherCode: weatherData.daily.weathercode[i],\n        minTemperature: Math.round(weatherData.daily.temperature_2m_min[i]),\n        maxTemperature: Math.round(weatherData.daily.temperature_2m_max[i])\n      });\n    }\n    return dailyWeatherData;\n  };\n  const getDailySunrise = () => {\n    return weatherData.daily.sunrise[0].slice(11, weatherData.daily.sunrise[0].length);\n  };\n  const getDailySunset = () => {\n    return weatherData.daily.sunset[0].slice(11, weatherData.daily.sunset[0].length);\n  };\n  const getCurrentTemperature = () => {\n    return Math.round(weatherData.current_weather.temperature);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card-search\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"weather-card-search-form\",\n          onSubmit: handleOnSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"weather-card-search-box\",\n            type: \"text\",\n            value: searchQuery,\n            onChange: handleOnSearchQueryChange,\n            onClick: handleOnSearchQueryClick\n            // onBlur={handleOnSearchQueryFocusOut} // TODO (maybe)\n            ,\n            placeholder: \"Search by city name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card-search-dropdown\",\n            children: searchDropdownOpen && (searchQueryResponse === null || searchQueryResponse === void 0 ? void 0 : (_searchQueryResponse$ = searchQueryResponse.results) === null || _searchQueryResponse$ === void 0 ? void 0 : _searchQueryResponse$.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-card-search-dropdown-item\",\n              onClick: () => handleOnSearchQueryResponseClick(result),\n              children: [result.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                children: [\", \", result.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 41\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-current-main\",\n          children: selectedCity && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [selectedCity.name, /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"12px\"\n                },\n                children: [\", \", selectedCity.country_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  'fontSize': '90px'\n                },\n                children: [Math.round(weatherData.current_weather.temperature), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: weatherCodes[weatherData.current_weather.weathercode].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-card-high-and-low\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"L: \", Math.round(weatherData.daily.temperature_2m_min[0]), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"H: \", Math.round(weatherData.daily.temperature_2m_max[0]), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(HourlyWeatherCardList, {\n          hourlyWeather: getHourlyWeather(),\n          sunrise: getDailySunrise(),\n          sunset: getDailySunset()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DailyWeather, {\n          dailyWeather: getDailyWeather(),\n          currentTemperature: getCurrentTemperature()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(WeatherCard, \"Wh4QVi0BOkIoJYP2PapKQYu8Lc8=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["useState","useEffect","axios","weatherCodes","HourlyWeatherCardList","DailyWeather","jsxDEV","_jsxDEV","Fragment","_Fragment","useStateLocalStorage","key","defaultValue","_s","value","setValue","savedValue","window","localStorage","getItem","JSON","parse","rawValue","stringify","setItem","WeatherCard","_s2","_searchQueryResponse$","weatherData","setWeatherData","undefined","searchQuery","setSearchQuery","searchQueryResponse","setSearchQueryResponse","selectedCity","setSelectedCity","searchDropdownOpen","setSearchDropdownOpen","fetchWeatherData","response","get","latitude","longitude","console","log","data","error","fetchSearchQueryResponse","handleOnSearchQueryChange","event","target","handleOnSearchQueryClick","handleOnSearchQueryFocusOut","handleOnSearchQueryResponseClick","city","handleOnSubmit","preventDefault","results","getHourlyWeather","Array","nowHour","Date","getHours","i","push","hour","hourly","time","slice","weatherCode","weathercode","temperature","Math","round","temperature_2m","getDailyWeather","dailyWeatherData","date","daily","day","toLocaleDateString","weekday","minTemperature","temperature_2m_min","maxTemperature","temperature_2m_max","getDailySunrise","sunrise","length","getDailySunset","sunset","getCurrentTemperature","current_weather","children","className","onSubmit","type","onChange","onClick","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","name","style","fontSize","country","country_code","description","hourlyWeather","dailyWeather","currentTemperature","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/WeatherCard.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport weatherCodes from \"../weatherCodes\";\r\nimport HourlyWeatherCardList from \"./HourlyWeatherCardList\";\r\nimport DailyWeather from \"./DailyWeather\";\r\n\r\ninterface WeatherData {\r\n    // TODO\r\n}\r\n\r\ninterface searchQueryResponse {\r\n    // TODO\r\n}\r\n\r\ntype HourlyWeatherData = {\r\n    hour: string,\r\n    weatherCode: number,\r\n    temperature: number,\r\n}\r\n\r\ntype DailyWeatherData = {\r\n    day: string,\r\n    weatherCode: number,\r\n    minTemperature: number,\r\n    maxTemperature: number,\r\n}\r\n\r\nconst useStateLocalStorage = (key: string, defaultValue: undefined) => {\r\n    const [value, setValue] = useState(() => {\r\n        try {\r\n            const savedValue = window.localStorage.getItem(key);\r\n            return savedValue ? JSON.parse(savedValue) : defaultValue;  \r\n        }\r\n        catch {\r\n            return defaultValue;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const rawValue = JSON.stringify(value);\r\n        window.localStorage.setItem(key, rawValue);\r\n    }, [value]);\r\n\r\n    return [value, setValue];\r\n}\r\n\r\nconst WeatherCard: React.FC = (): JSX.Element => {\r\n    const [weatherData, setWeatherData] = useState<any | undefined>(undefined); // TODO: Change 'any' to 'WeatherData'\r\n    const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n    const [searchQueryResponse, setSearchQueryResponse] = useState<any | undefined>([]); // TODO: Change 'any' to 'SearchQueryResponse'\r\n    const [selectedCity, setSelectedCity] = useState<any>(undefined);\r\n    const [searchDropdownOpen, setSearchDropdownOpen] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            if (selectedCity) {\r\n                try {\r\n                    const response = await axios.get(\r\n                        `https://api.open-meteo.com/v1/forecast?latitude=${selectedCity.latitude}&longitude=${selectedCity.longitude}&hourly=weathercode,temperature_2m,uv_index,cloudcover&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`\r\n                    );\r\n                    console.log(response.data);\r\n                    setWeatherData(response.data);\r\n                    window.localStorage.setItem('weatherData', JSON.stringify(response.data));\r\n                } catch (error) {\r\n                    console.error(\"Error fetching weather data. \" + error);\r\n                }\r\n            }\r\n        };\r\n        fetchWeatherData();\r\n    }, [selectedCity]);\r\n\r\n    useEffect(() => {\r\n        const fetchSearchQueryResponse = async () => {\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://geocoding-api.open-meteo.com/v1/search?name=${searchQuery}&count=10&language=en&format=json`\r\n                );\r\n                console.log(response.data);\r\n                setSearchQueryResponse(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching geolocation data. \" + error);\r\n            }\r\n        };\r\n        fetchSearchQueryResponse();\r\n    }, [searchQuery]);\r\n\r\n    const handleOnSearchQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    const handleOnSearchQueryClick = () => {\r\n        setSearchDropdownOpen(true);\r\n        // TODO: Blur everything except the dropdown menu\r\n    };\r\n\r\n    // TODO\r\n    const handleOnSearchQueryFocusOut = () => {\r\n        // setSearchDropdownOpen(false);\r\n    }\r\n\r\n    const handleOnSearchQueryResponseClick = (city: any): void => {\r\n        setSelectedCity(city);\r\n        setSearchDropdownOpen(false);\r\n        setSearchQuery(\"\");\r\n    };\r\n\r\n    const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\r\n        event.preventDefault();\r\n        if (searchQueryResponse.results) {\r\n            setSelectedCity(searchQueryResponse.results[0]);\r\n        }\r\n    };\r\n\r\n    const getHourlyWeather = (): HourlyWeatherData[] => {\r\n        const data = new Array<HourlyWeatherData>();\r\n        const nowHour = new Date().getHours();\r\n        for (let i = nowHour; i <= nowHour + 23; i++) {\r\n            data.push({\r\n                hour: weatherData.hourly.time[i].slice(11, 13),\r\n                \r\n                weatherCode: weatherData.hourly.weathercode[i],\r\n                temperature: Math.round(weatherData.hourly.temperature_2m[i]),\r\n            });\r\n        }\r\n        console.log(data);\r\n        return data;\r\n    }\r\n\r\n    const getDailyWeather = (): IDailyWeather[] => {\r\n        const dailyWeatherData = new Array<DailyWeatherData>();\r\n        for (let i = 0; i < 16; i++) {\r\n            let date = new Date(weatherData.daily.time[i]);\r\n            dailyWeatherData.push({\r\n                // day: 'TBD',\r\n                day: date.toLocaleDateString(\"en-US\", { weekday: 'long' }),\r\n                weatherCode: weatherData.daily.weathercode[i],\r\n                minTemperature: Math.round(weatherData.daily.temperature_2m_min[i]),\r\n                maxTemperature: Math.round(weatherData.daily.temperature_2m_max[i]),\r\n            });\r\n        }\r\n        return dailyWeatherData;\r\n    }\r\n\r\n    const getDailySunrise = (): string => {\r\n        return weatherData.daily.sunrise[0].slice(11, weatherData.daily.sunrise[0].length);\r\n    }\r\n\r\n    const getDailySunset = (): string => {\r\n        return weatherData.daily.sunset[0].slice(11, weatherData.daily.sunset[0].length);\r\n    }\r\n\r\n    const getCurrentTemperature = (): number => {\r\n        return Math.round(weatherData.current_weather.temperature);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"weather-card\">\r\n                <div className=\"weather-card-search\">\r\n                    <form\r\n                        className=\"weather-card-search-form\"\r\n                        onSubmit={handleOnSubmit}\r\n                    >\r\n                        <input\r\n                            className=\"weather-card-search-box\"\r\n                            type=\"text\"\r\n                            value={searchQuery}\r\n                            onChange={handleOnSearchQueryChange}\r\n                            onClick={handleOnSearchQueryClick}\r\n                            // onBlur={handleOnSearchQueryFocusOut} // TODO (maybe)\r\n                            placeholder={\"Search by city name\"}\r\n                        ></input>\r\n                        <div className=\"weather-card-search-dropdown\">\r\n                            {searchDropdownOpen &&\r\n                                searchQueryResponse?.results?.map(\r\n                                    (result: any, index: number) => (\r\n                                        <div\r\n                                            className=\"weather-card-search-dropdown-item\"\r\n                                            key={index}\r\n                                            onClick={() =>\r\n                                                handleOnSearchQueryResponseClick(\r\n                                                    result\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {result.name}\r\n                                            <span style={{ fontSize: \"12px\" }}>\r\n                                                , {result.country}\r\n                                            </span>\r\n                                        </div>\r\n                                    )\r\n                                )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {weatherData && (\r\n                    <>\r\n                        <div className=\"weather-card-current-main\">\r\n                            {selectedCity && (\r\n                                <>\r\n                                    <p>\r\n                                        {selectedCity.name}\r\n                                        <span style={{ fontSize: \"12px\" }}>\r\n                                            , {selectedCity.country_code}\r\n                                        </span>\r\n                                    </p>\r\n                                    {\r\n                                        weatherData && (\r\n                                            <>\r\n                                                <p></p>\r\n                                                <p style={{'fontSize': '90px'}}>{Math.round(weatherData.current_weather.temperature)}°</p>\r\n                                                <p>{weatherCodes[weatherData.current_weather.weathercode].description}</p>\r\n                                                <div className=\"weather-card-high-and-low\">\r\n                                                    <p>L: {Math.round(weatherData.daily.temperature_2m_min[0])}°</p>\r\n                                                    <p>H: {Math.round(weatherData.daily.temperature_2m_max[0])}°</p>\r\n                                                </div>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <HourlyWeatherCardList hourlyWeather={getHourlyWeather()} sunrise={getDailySunrise()} sunset={getDailySunset()} />\r\n                        <DailyWeather dailyWeather={getDailyWeather()} currentTemperature={getCurrentTemperature()}/>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}