{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\HourlyWeatherCardList.tsx\";\nimport weatherCodes from \"../weatherCodes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HourlyWeatherCardList = ({\n  hourlyWeather,\n  sunrise,\n  sunset\n}) => {\n  const isSunriseOrSunset = card => {\n    return card.hour === sunrise.slice(0, 2) || card.hour === sunset.slice(0, 2);\n  };\n  const displayTemperature = card => {\n    if (isSunriseOrSunset(card)) {\n      if (card.hour === sunrise.slice(0, 2)) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sunrise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 24\n      }, this);else if (card.hour === sunset.slice(0, 2)) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sunset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [card.temperature, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  };\n  const displayHours = (card, index) => {\n    if (index !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: card.hour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    } else if (index === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }\n    if (isSunriseOrSunset(card)) {\n      if (card.hour === sunrise.slice(0, 2)) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sunrise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this);else if (card.hour === sunset.slice(0, 2)) return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: sunset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-weather-card-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-weather-card-list-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hourly Weather - Next 24 Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-weather-card-list\",\n      children: hourlyWeather.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-weather-card\",\n        children: [displayHours(card, index), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherCodes[card.weatherCode].icon\n          // alt={`Weather icon ${card.weatherCode}`}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), displayTemperature(card)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = HourlyWeatherCardList;\nexport default HourlyWeatherCardList;\nvar _c;\n$RefreshReg$(_c, \"HourlyWeatherCardList\");","map":{"version":3,"names":["weatherCodes","jsxDEV","_jsxDEV","HourlyWeatherCardList","hourlyWeather","sunrise","sunset","isSunriseOrSunset","card","hour","slice","displayTemperature","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","displayHours","index","style","fontWeight","className","map","src","weatherCode","icon","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/HourlyWeatherCardList.tsx"],"sourcesContent":["import weatherCodes from \"../weatherCodes\";\r\n\r\ninterface Props {\r\n    hourlyWeather: any[];\r\n    sunrise: string;\r\n    sunset: string\r\n}\r\n\r\nconst HourlyWeatherCardList: React.FC<Props> = ({ hourlyWeather, sunrise, sunset }) => {\r\n    const isSunriseOrSunset = (card: any): boolean => {\r\n        return card.hour === sunrise.slice(0, 2) || card.hour === sunset.slice(0, 2);\r\n    }\r\n\r\n    const displayTemperature = (card: any) => {\r\n        if (isSunriseOrSunset(card)) {\r\n            if (card.hour === sunrise.slice(0, 2))\r\n                return <p>Sunrise</p>\r\n            else if (card.hour === sunset.slice(0, 2)) \r\n                return <p>Sunset</p>\r\n        }\r\n        return <p>{ card.temperature }Â°</p>;\r\n    }\r\n\r\n    const displayHours = (card: any, index: number) => {\r\n        if (index !== 0) { \r\n            return <p>{ card.hour }</p> \r\n        } \r\n        else if (index === 0) { \r\n            return <p style={{ fontWeight: \"bold\" }}>Now</p>\r\n        }\r\n        if (isSunriseOrSunset(card)) {\r\n            if (card.hour === sunrise.slice(0, 2))\r\n                return <p>{ sunrise }</p>\r\n            else if (card.hour === sunset.slice(0, 2)) \r\n                return <p>{ sunset }</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"hourly-weather-card-list-container\">\r\n            <div className=\"hourly-weather-card-list-header\">\r\n                <p>Hourly Weather - Next 24 Hours</p>\r\n            </div>\r\n            <div className=\"hourly-weather-card-list\">\r\n                { hourlyWeather.map((card, index) => (\r\n                    <div key={ index } className=\"hourly-weather-card\">\r\n                        { displayHours(card, index) }\r\n                        <img\r\n                            src={ weatherCodes[card.weatherCode].icon }\r\n                            // alt={`Weather icon ${card.weatherCode}`}\r\n                        />\r\n                        { displayTemperature(card) }\r\n                    </div>\r\n                )) }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HourlyWeatherCardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}