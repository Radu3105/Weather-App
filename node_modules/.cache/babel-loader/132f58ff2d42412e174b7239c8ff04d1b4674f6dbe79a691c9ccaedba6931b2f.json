{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\HourlyWeatherCardList.tsx\";\nimport weatherCodes from \"../weatherCodes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HourlyWeatherCardList = ({\n  hourlyWeather,\n  sunrise,\n  sunset\n}) => {\n  const displaySunriseAndSunset = card => {\n    if (card.hour === sunrise.slice(0, 2) || card.hour === sunset.slice(0, 2)) {\n      if (card.hour === sunrise.slice(0, 2)) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 24\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [card.temperature, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-weather-card-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-weather-card-list-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hourly Weather - Next 24 Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-weather-card-list\",\n      children: hourlyWeather.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-weather-card\",\n        children: [index !== 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherCodes[card.weatherCode].icon\n          // alt={`Weather icon ${card.weatherCode}`}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), card.hour === sunrise.slice(0, 2) ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sunrise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [card.temperature, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), card.hour === sunset.slice(0, 2) ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sunset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [card.temperature, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = HourlyWeatherCardList;\nexport default HourlyWeatherCardList;\nvar _c;\n$RefreshReg$(_c, \"HourlyWeatherCardList\");","map":{"version":3,"names":["weatherCodes","jsxDEV","_jsxDEV","HourlyWeatherCardList","hourlyWeather","sunrise","sunset","displaySunriseAndSunset","card","hour","slice","fileName","_jsxFileName","lineNumber","columnNumber","children","temperature","className","map","index","style","fontWeight","src","weatherCode","icon","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/HourlyWeatherCardList.tsx"],"sourcesContent":["import weatherCodes from \"../weatherCodes\";\r\n\r\ninterface Props {\r\n    hourlyWeather: any[];\r\n    sunrise: string;\r\n    sunset: string\r\n}\r\n\r\nconst HourlyWeatherCardList: React.FC<Props> = ({ hourlyWeather, sunrise, sunset }) => {\r\n    const displaySunriseAndSunset = (card: any) => {\r\n        if (card.hour === sunrise.slice(0, 2) || card.hour === sunset.slice(0, 2)) {\r\n            if (card.hour === sunrise.slice(0, 2)) {\r\n                return <p></p>\r\n            }\r\n        }\r\n        return <p>{card.temperature}°</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"hourly-weather-card-list-container\">\r\n            <div className=\"hourly-weather-card-list-header\">\r\n                <p>Hourly Weather - Next 24 Hours</p>\r\n            </div>\r\n            <div className=\"hourly-weather-card-list\">\r\n                {hourlyWeather.map((card, index) => (\r\n                    <div key={index} className=\"hourly-weather-card\">\r\n                        {index !== 0 ? (\r\n                            <p>{card.hour}</p>\r\n                        ) : (\r\n                            <p style={{ fontWeight: \"bold\" }}>Now</p>\r\n                        )}\r\n                        <img\r\n                            src={weatherCodes[card.weatherCode].icon}\r\n                            // alt={`Weather icon ${card.weatherCode}`}\r\n                        />\r\n                        {}\r\n                        {card.hour === sunrise.slice(0, 2) ? (\r\n                            <p>Sunrise</p>\r\n                        ) : (\r\n                            <p>{card.temperature}°</p>\r\n                        )}\r\n                        {card.hour === sunset.slice(0, 2) ? (\r\n                            <p>Sunset</p>\r\n                        ) : (\r\n                            <p>{card.temperature}°</p>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HourlyWeatherCardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}