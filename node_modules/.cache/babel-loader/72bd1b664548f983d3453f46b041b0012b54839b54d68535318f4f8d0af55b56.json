{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\WeatherCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherCard = ({\n  latitude,\n  longitude\n}) => {\n  _s();\n  const API_WEATHER = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`;\n  const API_GEOLOCATION = `https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=10&language=en&format=json`;\n\n  //! 'weatherData' could be refactored to support an exact type such as an interface because 'any' bypasses type-checking and is anti-typescript\n  const [weatherData, setWeatherData] = useState(undefined);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchQueryResponse, setSearchQueryResponse] = useState([]);\n  var [city, setCity] = useState(\"\");\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(API_WEATHER);\n        console.log(response.data);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data. \" + error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  const handleSearchQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleOnSubmit = () => {};\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card-search\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleOnSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"weather-card-search-box\",\n              type: \"text\",\n              value: searchQuery,\n              onChange: handleSearchQueryChange,\n              placeholder: \"Search City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: searchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [weatherData.current_weather.temperature, \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherCard, \"t0J+Euq33I53MHn8+pYj/ajvUgY=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherCard","latitude","longitude","_s","API_WEATHER","API_GEOLOCATION","city","weatherData","setWeatherData","undefined","searchQuery","setSearchQuery","searchQueryResponse","setSearchQueryResponse","setCity","fetchWeatherData","response","get","console","log","data","error","handleSearchQueryChange","event","target","value","handleOnSubmit","Fragment","children","className","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","current_weather","temperature","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/WeatherCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface Props {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\nconst WeatherCard: React.FC<Props> = ({ latitude, longitude }) => {\r\n    const API_WEATHER = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`;\r\n    const API_GEOLOCATION = `https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=10&language=en&format=json`;\r\n\r\n    //! 'weatherData' could be refactored to support an exact type such as an interface because 'any' bypasses type-checking and is anti-typescript\r\n    const [weatherData, setWeatherData] = useState<any | undefined>(undefined);\r\n    const [searchQuery, setSearchQuery] = useState<string | undefined>(\"\");\r\n    const [searchQueryResponse, setSearchQueryResponse] = useState<string[] | undefined>([]);\r\n    var [city, setCity] = useState<string | undefined>(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const response = await axios.get(API_WEATHER);\r\n                console.log(response.data);\r\n                setWeatherData(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data. \" + error);\r\n            }\r\n        };\r\n        fetchWeatherData();\r\n    }, []);\r\n\r\n    const handleSearchQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    const handleOnSubmit = () => {\r\n        \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"weather-card\">\r\n                <div className=\"weather-card-search\">\r\n                    <form onSubmit={handleOnSubmit}>\r\n                        <label>\r\n                            <input\r\n                                className=\"weather-card-search-box\"\r\n                                type=\"text\"\r\n                                value={searchQuery}\r\n                                onChange={handleSearchQueryChange}\r\n                                placeholder=\"Search City\"\r\n                            ></input>\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                {weatherData && (\r\n                    <React.Fragment>\r\n                        <div className=\"weather-card-header\">\r\n                            <p>{searchQuery}</p>\r\n                            <p>{weatherData.current_weather.temperature}â„ƒ</p>\r\n                        </div>\r\n                        <div className=\"weather-card-hourly\"></div>\r\n                        <div className=\"weather-card-daily\"></div>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}