{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\WeatherCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherCard = ({\n  latitude,\n  longitude\n}) => {\n  _s();\n  const API_WEATHER = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`;\n  const API_GEOLOCATION = `https://geocoding-api.open-meteo.com/v1/search?name=Craiova&count=10&language=en&format=json`;\n\n  //! 'weatherData' could be refactored to support an exact type such as an interface because 'any' bypasses type-checking and is anti-typescript\n  const [weatherData, setWeatherData] = useState(undefined);\n  var [searchQuery, setSearchQuery] = useState(\"\"); //? string, undefined, \"\"\n  const [searchQueryResponse, setSearchQueryResponse] = useState([]);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(API_WEATHER);\n        console.log(response.data);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data. \" + error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  useEffect(() => {\n    const fetchSearchQueryResponse = async () => {\n      try {\n        console.log(searchQuery);\n        const response = await axios.get(API_GEOLOCATION);\n        console.log(response.data);\n        setSearchQueryResponse(response.data);\n      } catch (error) {\n        console.error(\"Error fetching geolocation data. \" + error);\n      }\n    };\n    fetchSearchQueryResponse();\n  }, [searchQuery]);\n  const handleSearchQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleOnSubmit = () => {};\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card-search\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"weather-card-search-form\",\n          onSubmit: handleOnSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"weather-card-search-box\",\n              type: \"text\",\n              value: searchQuery,\n              onChange: handleSearchQueryChange,\n              placeholder: \"Search city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-current-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: searchQuery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [weatherData.current_weather.temperature, \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherCard, \"4HOtBBLjl5biRL7VJrDZtzuBp1o=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WeatherCard","latitude","longitude","_s","API_WEATHER","API_GEOLOCATION","weatherData","setWeatherData","undefined","searchQuery","setSearchQuery","searchQueryResponse","setSearchQueryResponse","fetchWeatherData","response","get","console","log","data","error","fetchSearchQueryResponse","handleSearchQueryChange","event","target","value","handleOnSubmit","Fragment","children","className","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","current_weather","temperature","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/WeatherCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface Props {\r\n    latitude : number;\r\n    longitude: number;\r\n}\r\n\r\nconst WeatherCard: React.FC<Props> = ({ latitude, longitude }) => {\r\n    const API_WEATHER     = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`;\r\n    const API_GEOLOCATION = `https://geocoding-api.open-meteo.com/v1/search?name=Craiova&count=10&language=en&format=json`;\r\n\r\n    //! 'weatherData' could be refactored to support an exact type such as an interface because 'any' bypasses type-checking and is anti-typescript\r\n    const [weatherData, setWeatherData]                 = useState<any | undefined>(undefined);\r\n    var   [searchQuery, setSearchQuery]                 = useState<string | undefined>(\"\"); //? string, undefined, \"\"\r\n    const [searchQueryResponse, setSearchQueryResponse] = useState<string[] | undefined >([]);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const response = await axios.get(API_WEATHER);\r\n                console.log(response.data);\r\n                setWeatherData(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data. \" + error);\r\n            }\r\n        };\r\n        fetchWeatherData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchSearchQueryResponse = async () => {\r\n            try {\r\n                console.log(searchQuery);\r\n                const response = await axios.get(API_GEOLOCATION);\r\n                console.log(response.data);\r\n                setSearchQueryResponse(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching geolocation data. \" + error);\r\n            }\r\n        };\r\n        fetchSearchQueryResponse();\r\n    }, [searchQuery]);\r\n\r\n    const handleSearchQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    const handleOnSubmit = () => {\r\n    \r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"weather-card\">\r\n                <div className=\"weather-card-search\">\r\n                    <form\r\n                        className=\"weather-card-search-form\"\r\n                        onSubmit={handleOnSubmit}\r\n                    >\r\n                        <label>\r\n                            <input\r\n                                className=\"weather-card-search-box\"\r\n                                type=\"text\"\r\n                                value={searchQuery}\r\n                                onChange={handleSearchQueryChange}\r\n                                placeholder={\"Search city\"}\r\n                            ></input>\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                {weatherData && (\r\n                    <React.Fragment>\r\n                        <div className=\"weather-card-current-main\">\r\n                            <p>{searchQuery}</p>\r\n                            <p>{weatherData.current_weather.temperature}â„ƒ</p>\r\n                        </div>\r\n                        <div className=\"weather-card-hourly\"></div>\r\n                        <div className=\"weather-card-daily\"></div>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}