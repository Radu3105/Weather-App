{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\HourlyWeatherCardList.tsx\";\nimport weatherCodes, { sunriseIcon, sunsetIcon } from \"../weatherCodes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HourlyWeatherCardList = ({\n  hourlyWeather,\n  sunrise,\n  sunset\n}) => {\n  const isSunrise = hour => hour === sunrise.slice(0, 2);\n  const isSunset = hour => hour === sunset.slice(0, 2);\n  const displayTemperature = card => {\n    if (isSunrise(card.hour)) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sunrise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 42\n    }, this);\n    if (isSunset(card.hour)) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sunset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 41\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [card.temperature, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  };\n  const displayHour = (card, index) => {\n    if (index === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: \"Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this);\n    if (isSunrise(card.hour)) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: sunrise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 42\n    }, this);\n    if (isSunset(card.hour)) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: sunset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 41\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: card.hour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  };\n  const displayIcon2 = card => {};\n  const displayIcon = card => {\n    const iconProps = isSunrise(card.hour) ? {\n      src: sunriseIcon,\n      alt: 'sunrise'\n    } : isSunset(card.hour) ? {\n      src: sunsetIcon,\n      alt: 'sunset'\n    } : {\n      src: weatherCodes[card.weatherCode].icon,\n      alt: `Weather icon ${card.weatherCode}`\n    };\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      ...iconProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-weather-card-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-weather-card-list-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hourly Weather - Next 24 Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hourly-weather-card-list\",\n      children: hourlyWeather.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-weather-card\",\n        children: [displayHour(card, index), displayIcon(card), displayTemperature(card)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = HourlyWeatherCardList;\nexport default HourlyWeatherCardList;\nvar _c;\n$RefreshReg$(_c, \"HourlyWeatherCardList\");","map":{"version":3,"names":["weatherCodes","sunriseIcon","sunsetIcon","jsxDEV","_jsxDEV","HourlyWeatherCardList","hourlyWeather","sunrise","sunset","isSunrise","hour","slice","isSunset","displayTemperature","card","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","displayHour","index","style","fontWeight","displayIcon2","displayIcon","iconProps","src","alt","weatherCode","icon","className","map","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/HourlyWeatherCardList.tsx"],"sourcesContent":["import weatherCodes, { sunriseIcon, sunsetIcon } from \"../weatherCodes\";\r\n\r\ninterface HourlyWeather {\r\n    hour: string;\r\n    temperature: number;\r\n    weatherCode: number;\r\n}\r\n\r\ninterface Props {\r\n    hourlyWeather: HourlyWeather[];\r\n    sunrise: string;\r\n    sunset: string;\r\n}\r\n\r\nconst HourlyWeatherCardList: React.FC<Props> = ({ hourlyWeather, sunrise, sunset }) => {\r\n\r\n    const isSunrise = (hour: string) => hour === sunrise.slice(0, 2);\r\n    const isSunset = (hour: string) => hour === sunset.slice(0, 2);\r\n\r\n    const displayTemperature = (card: HourlyWeather) => {\r\n        if (isSunrise(card.hour)) return <p>Sunrise</p>;\r\n        if (isSunset(card.hour)) return <p>Sunset</p>;\r\n        return <p>{card.temperature}Â°</p>;\r\n    };\r\n\r\n    const displayHour = (card: HourlyWeather, index: number) => {\r\n        if (index === 0) return <p style={{ fontWeight: \"bold\" }}>Now</p>;\r\n        if (isSunrise(card.hour)) return <p>{sunrise}</p>;\r\n        if (isSunset(card.hour)) return <p>{sunset}</p>;\r\n        return <p>{card.hour}</p>;\r\n    };\r\n\r\n    const displayIcon2 = (card: HourlyWeather) => {\r\n        \r\n    }\r\n\r\n    const displayIcon = (card: HourlyWeather) => {\r\n        const iconProps = isSunrise(card.hour)\r\n            ? { src: sunriseIcon, alt: 'sunrise' }\r\n            : isSunset(card.hour)\r\n                ? { src: sunsetIcon, alt: 'sunset' }\r\n                : { src: weatherCodes[card.weatherCode].icon, alt: `Weather icon ${card.weatherCode}` };\r\n        return <img {...iconProps} />;\r\n    };\r\n\r\n    return (\r\n        <div className=\"hourly-weather-card-list-container\">\r\n            <div className=\"hourly-weather-card-list-header\">\r\n                <p>Hourly Weather - Next 24 Hours</p>\r\n            </div>\r\n            <div className=\"hourly-weather-card-list\">\r\n                {hourlyWeather.map((card, index) => (\r\n                    <div key={index} className=\"hourly-weather-card\">\r\n                        {displayHour(card, index)}\r\n                        {displayIcon(card)}\r\n                        {displayTemperature(card)}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HourlyWeatherCardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}