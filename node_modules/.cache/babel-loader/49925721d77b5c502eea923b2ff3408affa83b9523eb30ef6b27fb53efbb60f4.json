{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\TemperatureBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemperatureBar = ({\n  minTemp,\n  maxTemp,\n  currMinTemp,\n  currMaxTemp\n}) => {\n  _s();\n  const temperatureBarFullElementRef = useRef(null);\n  const [paddingLeft, setPaddingLeft] = useState(0);\n  const [currBarWidth, setCurrBarWidth] = useState(0);\n  useEffect(() => {\n    if (temperatureBarFullElementRef.current) {\n      const fullBarWidth = temperatureBarFullElementRef.current.offsetWidth;\n      const range = maxTemp - minTemp;\n      const currRange = currMaxTemp - currMinTemp;\n      setPaddingLeft((currMinTemp - minTemp) / range * fullBarWidth);\n      setCurrBarWidth(currRange / range * fullBarWidth);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temperature-bar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [minTemp, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-bar-full\",\n      ref: temperatureBarFullElementRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature-bar-current\",\n        style: {\n          width: currBarWidth,\n          left: paddingLeft,\n          position: 'absolute'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [maxTemp, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TemperatureBar, \"IwbE2OGtEW+W+euzjoy6PqIewsY=\");\n_c = TemperatureBar;\nexport default TemperatureBar;\nvar _c;\n$RefreshReg$(_c, \"TemperatureBar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","TemperatureBar","minTemp","maxTemp","currMinTemp","currMaxTemp","_s","temperatureBarFullElementRef","paddingLeft","setPaddingLeft","currBarWidth","setCurrBarWidth","current","fullBarWidth","offsetWidth","range","currRange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","left","position","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/TemperatureBar.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\ninterface Props {\r\n    minTemp: number;\r\n    maxTemp: number;\r\n    currMinTemp: number;\r\n    currMaxTemp: number;\r\n}\r\n\r\nconst TemperatureBar: React.FC<Props> = ({ minTemp, maxTemp, currMinTemp, currMaxTemp }): JSX.Element => {\r\n    const temperatureBarFullElementRef = useRef<HTMLDivElement>(null);\r\n    const [paddingLeft, setPaddingLeft] = useState(0);\r\n    const [currBarWidth, setCurrBarWidth] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (temperatureBarFullElementRef.current) {\r\n            const fullBarWidth = temperatureBarFullElementRef.current.offsetWidth;\r\n            const range = maxTemp - minTemp;\r\n            const currRange = currMaxTemp - currMinTemp;\r\n            setPaddingLeft(((currMinTemp - minTemp) / range) * fullBarWidth);\r\n            setCurrBarWidth((currRange / range) * fullBarWidth);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"temperature-bar-container\">\r\n            <p>{minTemp}°</p>\r\n            <div className=\"temperature-bar-full\" ref={temperatureBarFullElementRef}>\r\n                <div className=\"temperature-bar-current\" style={{ width: currBarWidth, left: paddingLeft, position: 'absolute' }}></div>\r\n            </div>\r\n            <p>{maxTemp}°</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TemperatureBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3D,MAAMC,cAA+B,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAY,CAAC,KAAkB;EAAAC,EAAA;EACrG,MAAMC,4BAA4B,GAAGV,MAAM,CAAiB,IAAI,CAAC;EACjE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnDF,SAAS,CAAC,MAAM;IACZ,IAAIW,4BAA4B,CAACK,OAAO,EAAE;MACtC,MAAMC,YAAY,GAAGN,4BAA4B,CAACK,OAAO,CAACE,WAAW;MACrE,MAAMC,KAAK,GAAGZ,OAAO,GAAGD,OAAO;MAC/B,MAAMc,SAAS,GAAGX,WAAW,GAAGD,WAAW;MAC3CK,cAAc,CAAE,CAACL,WAAW,GAAGF,OAAO,IAAIa,KAAK,GAAIF,YAAY,CAAC;MAChEF,eAAe,CAAEK,SAAS,GAAGD,KAAK,GAAIF,YAAY,CAAC;IACvD;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAKiB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACtClB,OAAA;MAAAkB,QAAA,GAAIhB,OAAO,EAAC,MAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjBtB,OAAA;MAAKiB,SAAS,EAAC,sBAAsB;MAACM,GAAG,EAAEhB,4BAA6B;MAAAW,QAAA,eACpElB,OAAA;QAAKiB,SAAS,EAAC,yBAAyB;QAACO,KAAK,EAAE;UAAEC,KAAK,EAAEf,YAAY;UAAEgB,IAAI,EAAElB,WAAW;UAAEmB,QAAQ,EAAE;QAAW;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvH,CAAC,eACNtB,OAAA;MAAAkB,QAAA,GAAIf,OAAO,EAAC,MAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAAAhB,EAAA,CAxBKL,cAA+B;AAAA2B,EAAA,GAA/B3B,cAA+B;AA0BrC,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}