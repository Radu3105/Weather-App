{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radug\\\\Documents\\\\Programming Related\\\\Personal Projects\\\\Web Applications\\\\Weather Application\\\\Client\\\\weather-application\\\\src\\\\Components\\\\WeatherCard.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n;\nconst WeatherCard = ({\n  latitude,\n  longitude\n}) => {\n  _s();\n  var _searchQueryResponse$;\n  const MAX_CITY_RESPONSE_NUMBER = 10;\n  const [weatherData, setWeatherData] = useState(undefined); // TODO: Change 'any' to 'WeatherData'\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchQueryResponse, setSearchQueryResponse] = useState([]); // TODO: Change 'any' to 'SearchQueryResponse'\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const searchBoxElement = useRef(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`);\n        // console.log(response.data);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data. \" + error);\n      }\n    };\n    fetchWeatherData();\n    if (searchBoxElement.current) {}\n  }, []);\n  useEffect(() => {\n    const fetchSearchQueryResponse = async () => {\n      try {\n        const response = await axios.get(`https://geocoding-api.open-meteo.com/v1/search?name=${searchQuery}&count=10&language=en&format=json`);\n        // console.log(response.data);\n        setSearchQueryResponse(response.data);\n      } catch (error) {\n        console.error(\"Error fetching geolocation data. \" + error);\n      }\n    };\n    fetchSearchQueryResponse();\n  }, [searchQuery]);\n  const handleSearchQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleOnSearchQueryResponseClick = name => {\n    setSelectedCity(name);\n  };\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (searchQueryResponse.results) {\n      setSelectedCity(searchQueryResponse.results[0].name);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card-search\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"weather-card-search-form\",\n          onSubmit: handleOnSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"weather-card-search-box\",\n              type: \"text\",\n              value: searchQuery,\n              onChange: handleSearchQueryChange,\n              placeholder: \"Search by city name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-card-search-dropdown\",\n            children: searchQueryResponse === null || searchQueryResponse === void 0 ? void 0 : (_searchQueryResponse$ = searchQueryResponse.results) === null || _searchQueryResponse$ === void 0 ? void 0 : _searchQueryResponse$.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-card-search-dropdown-item\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => handleOnSearchQueryResponseClick(result.name),\n                children: result.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-current-main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-hourly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-card-daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WeatherCard, \"UuwdhHPlaJLIJRKvQ32pb6fcDe8=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherCard","latitude","longitude","_s","_searchQueryResponse$","MAX_CITY_RESPONSE_NUMBER","weatherData","setWeatherData","undefined","searchQuery","setSearchQuery","searchQueryResponse","setSearchQueryResponse","selectedCity","setSelectedCity","searchBoxElement","fetchWeatherData","response","get","data","error","console","current","fetchSearchQueryResponse","handleSearchQueryChange","event","target","value","handleOnSearchQueryResponseClick","name","handleOnSubmit","preventDefault","results","children","className","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","result","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/radug/Documents/Programming Related/Personal Projects/Web Applications/Weather Application/Client/weather-application/src/Components/WeatherCard.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\ninterface Props {\r\n    latitude : number;\r\n    longitude: number;\r\n}\r\n\r\ninterface WeatherData {\r\n    // TODO\r\n};\r\n\r\ninterface searchQueryResponse {\r\n    // TODO\r\n};\r\n\r\nconst WeatherCard: React.FC<Props> = ({ latitude, longitude }) => {\r\n    const MAX_CITY_RESPONSE_NUMBER = 10;\r\n\r\n    const [weatherData, setWeatherData]= useState<any | undefined>(undefined); // TODO: Change 'any' to 'WeatherData'\r\n    const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n    const [searchQueryResponse, setSearchQueryResponse] = useState<any | undefined>([]); // TODO: Change 'any' to 'SearchQueryResponse'\r\n    const [selectedCity, setSelectedCity] = useState<string>(\"\");\r\n\r\n    const searchBoxElement = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,uv_index&daily=weathercode,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,sunrise,sunset,uv_index_max,uv_index_clear_sky_max,precipitation_sum,rain_sum,showers_sum,snowfall_sum,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant&current_weather=true&timezone=auto&forecast_days=16`);\r\n                // console.log(response.data);\r\n                setWeatherData(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching weather data. \" + error);\r\n            }\r\n        };\r\n        fetchWeatherData();\r\n\r\n        if (searchBoxElement.current) {\r\n            \r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchSearchQueryResponse = async () => {\r\n            try {\r\n                const response = await axios.get(`https://geocoding-api.open-meteo.com/v1/search?name=${searchQuery}&count=10&language=en&format=json`);\r\n                // console.log(response.data);\r\n                setSearchQueryResponse(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching geolocation data. \" + error);\r\n            }\r\n        };\r\n        fetchSearchQueryResponse();\r\n    }, [searchQuery]);\r\n\r\n    const handleSearchQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    const handleOnSearchQueryResponseClick = (name: string) => {\r\n        setSelectedCity(name);\r\n    };\r\n\r\n    const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (searchQueryResponse.results) {\r\n            setSelectedCity(searchQueryResponse.results[0].name);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"weather-card\">\r\n                <div className=\"weather-card-search\">\r\n                    <form\r\n                        className=\"weather-card-search-form\"\r\n                        onSubmit={handleOnSubmit}\r\n                    >\r\n                        <label>\r\n                            <input\r\n                                className=\"weather-card-search-box\"\r\n                                type=\"text\"\r\n                                value={searchQuery}\r\n                                onChange={handleSearchQueryChange}\r\n                                placeholder={\"Search by city name\"}\r\n                            ></input>\r\n                        </label>\r\n                        <div className=\"weather-card-search-dropdown\">\r\n                            {searchQueryResponse?.results?.map((result: any, index: number) => (\r\n                                <div className=\"weather-card-search-dropdown-item\">\r\n                                    <p onClick={() => handleOnSearchQueryResponseClick(result.name)} key={index}>{result.name}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </form>     \r\n                </div>\r\n                {weatherData && (\r\n                    <>\r\n                        <div className=\"weather-card-current-main\">\r\n                            {/* <p>{weatherData.current_weather.temperature}℃</p> */}\r\n                        </div>\r\n                        <div className=\"weather-card-hourly\"></div>\r\n                        <div className=\"weather-card-daily\"></div>\r\n                    </>\r\n                )}\r\n                <p>{selectedCity}</p>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}